// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Volo.Abp.EntityFrameworkCore;
using XFree.SimpleService.Host.EntityFrameworkCore;

namespace XFreeSimpleService.Host.Migrations
{
    [DbContext(typeof(SystemServiceMigrationDbContext))]
    [Migration("20220125025631_Update_To_22012501")]
    partial class Update_To_22012501
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.MySql)
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("XFree.Simple.Domain.SystemManagement.Common.DatabaseConnection", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("id")
                        .HasComment("数据唯一标识");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("concurrency_stamp")
                        .HasComment("");

                    b.Property<string>("ConnectionString")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("connection_string")
                        .HasComment("数据库连接字符串");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("creation_time")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("creator_id")
                        .HasComment("创建人Id");

                    b.Property<int>("DatabaseProviderType")
                        .HasColumnType("int")
                        .HasColumnName("database_provider_type")
                        .HasComment("0: NotSpecified1: EntityFrameworkCore2: MongoDb");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("char(36)")
                        .HasColumnName("deleter_id")
                        .HasComment("Id of the deleter user.");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deletion_time")
                        .HasComment("Deletion time.");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("longtext")
                        .HasColumnName("extra_properties")
                        .HasComment("");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted")
                        .HasComment("Used to mark an Entity as 'Deleted'.");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_modification_time")
                        .HasComment("最后修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("char(36)")
                        .HasColumnName("last_modifier_id")
                        .HasComment("最后人Id");

                    b.Property<string>("Memo")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("memo")
                        .HasComment("备注");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("name")
                        .HasComment("名称");

                    b.Property<string>("RangeTenantIds")
                        .HasMaxLength(4000)
                        .HasColumnType("varchar(4000)")
                        .HasColumnName("range_tenant_ids")
                        .HasComment("限定商户范围,默认不限定");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("状态");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("sys_database_connection");
                });

            modelBuilder.Entity("XFree.Simple.Domain.SystemManagement.Common.Dict", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("id")
                        .HasComment("数据唯一标识");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("concurrency_stamp")
                        .HasComment("");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("creation_time")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("creator_id")
                        .HasComment("创建人Id");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("char(36)")
                        .HasColumnName("deleter_id")
                        .HasComment("Id of the deleter user.");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deletion_time")
                        .HasComment("Deletion time.");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("description")
                        .HasComment("描述");

                    b.Property<string>("DictCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("dict_code")
                        .HasComment("字典编码");

                    b.Property<string>("DictEnName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("dict_en_name")
                        .HasComment("字典名称");

                    b.Property<string>("DictName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("dict_name")
                        .HasComment("字典名称");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("longtext")
                        .HasColumnName("extra_properties")
                        .HasComment("");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted")
                        .HasComment("Used to mark an Entity as 'Deleted'.");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_modification_time")
                        .HasComment("最后修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("char(36)")
                        .HasColumnName("last_modifier_id")
                        .HasComment("最后人Id");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)")
                        .HasColumnName("tenant_id")
                        .HasComment("租户Id");

                    b.HasKey("Id");

                    b.HasIndex("DictCode");

                    b.ToTable("sys_dict");
                });

            modelBuilder.Entity("XFree.Simple.Domain.SystemManagement.Common.DictItem", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("id")
                        .HasComment("数据唯一标识");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("concurrency_stamp")
                        .HasComment("");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("creation_time")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("creator_id")
                        .HasComment("创建人Id");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("char(36)")
                        .HasColumnName("deleter_id")
                        .HasComment("Id of the deleter user.");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deletion_time")
                        .HasComment("Deletion time.");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("description")
                        .HasComment("描述");

                    b.Property<string>("DictId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("dict_id")
                        .HasComment("字典id");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("enabled")
                        .HasComment("状态（1启用 0不启用）");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("longtext")
                        .HasColumnName("extra_properties")
                        .HasComment("");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted")
                        .HasComment("Used to mark an Entity as 'Deleted'.");

                    b.Property<string>("ItemEnText")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("item_en_text")
                        .HasComment("字典项英文文本");

                    b.Property<string>("ItemText")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("item_text")
                        .HasComment("字典项文本");

                    b.Property<string>("ItemValue")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("item_value")
                        .HasComment("字典项值");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_modification_time")
                        .HasComment("最后修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("char(36)")
                        .HasColumnName("last_modifier_id")
                        .HasComment("最后人Id");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int")
                        .HasColumnName("sort_order")
                        .HasComment("排序");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)")
                        .HasColumnName("tenant_id")
                        .HasComment("租户Id");

                    b.HasKey("Id");

                    b.HasIndex("DictId");

                    b.HasIndex("ItemText");

                    b.ToTable("sys_dict_item");
                });

            modelBuilder.Entity("XFree.Simple.Domain.SystemManagement.Organization.Depart", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("id")
                        .HasComment("数据唯一标识");

                    b.Property<string>("Address")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("address")
                        .HasComment("地址");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("concurrency_stamp")
                        .HasComment("");

                    b.Property<string>("Contact")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("contact")
                        .HasComment("联系方式");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("creation_time")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("creator_id")
                        .HasComment("创建人Id");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("char(36)")
                        .HasColumnName("deleter_id")
                        .HasComment("Id of the deleter user.");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deletion_time")
                        .HasComment("Deletion time.");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("longtext")
                        .HasColumnName("extra_properties")
                        .HasComment("");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted")
                        .HasComment("Used to mark an Entity as 'Deleted'.");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_modification_time")
                        .HasComment("最后修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("char(36)")
                        .HasColumnName("last_modifier_id")
                        .HasComment("最后人Id");

                    b.Property<string>("Memo")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("memo")
                        .HasComment("备注");

                    b.Property<int>("OrgCategory")
                        .HasColumnType("int")
                        .HasColumnName("org_category")
                        .HasComment("机构类别 1组织机构，2岗位");

                    b.Property<string>("OrgCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("org_code")
                        .HasComment("机构编码");

                    b.Property<int>("OrgLevelType")
                        .HasColumnType("int")
                        .HasColumnName("org_level_type")
                        .HasComment("机构类型 1一级部门 2子部门");

                    b.Property<string>("OrgName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("org_name")
                        .HasComment("机构/部门名称");

                    b.Property<string>("OrgNameEn")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("org_name_en")
                        .HasComment("英文名");

                    b.Property<string>("OrgType")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("org_type")
                        .HasComment("类型");

                    b.Property<string>("ParentId")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("parent_id")
                        .HasComment("父机构ID");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int")
                        .HasColumnName("sort_order")
                        .HasComment("排序");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("状态");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)")
                        .HasColumnName("tenant_id")
                        .HasComment("租户Id");

                    b.HasKey("Id");

                    b.HasIndex("OrgCode");

                    b.HasIndex("OrgName");

                    b.ToTable("sys_depart");
                });

            modelBuilder.Entity("XFree.Simple.Domain.SystemManagement.Organization.OperationInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("id")
                        .HasComment("数据唯一标识");

                    b.Property<string>("Address")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("address")
                        .HasComment("地址");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("concurrency_stamp")
                        .HasComment("");

                    b.Property<string>("Content")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("content")
                        .HasComment("内容");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("creation_time")
                        .HasComment("时间");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("longtext")
                        .HasColumnName("extra_properties")
                        .HasComment("");

                    b.Property<string>("Ip")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("ip")
                        .HasComment("");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("状态(1-成功 2-失败)");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("title")
                        .HasComment("");

                    b.Property<string>("UserId")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("user_id")
                        .HasComment("用户Id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("sys_operation_info");
                });

            modelBuilder.Entity("XFree.Simple.Domain.SystemManagement.Organization.Post", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("id")
                        .HasComment("数据唯一标识");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code")
                        .HasComment("编码");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("concurrency_stamp")
                        .HasComment("");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("creation_time")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("creator_id")
                        .HasComment("创建人Id");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("char(36)")
                        .HasColumnName("deleter_id")
                        .HasComment("Id of the deleter user.");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deletion_time")
                        .HasComment("Deletion time.");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("longtext")
                        .HasColumnName("extra_properties")
                        .HasComment("");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted")
                        .HasComment("Used to mark an Entity as 'Deleted'.");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_modification_time")
                        .HasComment("最后修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("char(36)")
                        .HasColumnName("last_modifier_id")
                        .HasComment("最后人Id");

                    b.Property<string>("Memo")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("memo")
                        .HasComment("备注");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name")
                        .HasComment("名称");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int")
                        .HasColumnName("sort_order")
                        .HasComment("排序");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("状态");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)")
                        .HasColumnName("tenant_id")
                        .HasComment("租户Id");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("sys_post");
                });

            modelBuilder.Entity("XFree.Simple.Domain.SystemManagement.Organization.Tenant", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("id")
                        .HasComment("数据唯一标识");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code")
                        .HasComment("租户编码");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("concurrency_stamp")
                        .HasComment("");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("creation_time")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("creator_id")
                        .HasComment("创建人Id");

                    b.Property<string>("DefaultConnectionStringName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("default_connection_string_name")
                        .HasComment("数据库连接配置名称");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("char(36)")
                        .HasColumnName("deleter_id")
                        .HasComment("Id of the deleter user.");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deletion_time")
                        .HasComment("Deletion time.");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email")
                        .HasComment("邮箱");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("longtext")
                        .HasColumnName("extra_properties")
                        .HasComment("");

                    b.Property<int>("InitialDataStatus")
                        .HasColumnType("int")
                        .HasColumnName("initial_data_status")
                        .HasComment("数据初始化状态TODO: Job重试");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted")
                        .HasComment("Used to mark an Entity as 'Deleted'.");

                    b.Property<bool>("IsStandaloneDatabase")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_standalone_database")
                        .HasComment("采用独立的数据库");

                    b.Property<string>("Language")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("language")
                        .HasComment("语言");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_modification_time")
                        .HasComment("最后修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("char(36)")
                        .HasColumnName("last_modifier_id")
                        .HasComment("最后人Id");

                    b.Property<string>("Memo")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("memo")
                        .HasComment("备注");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name")
                        .HasComment("名称");

                    b.Property<string>("Phone")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("phone")
                        .HasComment("手机号/电话");

                    b.Property<string>("StandaloneDatabaseConnectionString")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasColumnName("standalone_database_connection_string")
                        .HasComment("采用独立的数据库");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("商户状态");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("Name");

                    b.ToTable("sys_tenant");
                });

            modelBuilder.Entity("XFree.Simple.Domain.SystemManagement.Organization.User", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("id")
                        .HasComment("数据唯一标识");

                    b.Property<string>("Avatar")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("avatar")
                        .HasComment("头像");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("birthday")
                        .HasComment("生日");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("concurrency_stamp")
                        .HasComment("");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("creation_time")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("creator_id")
                        .HasComment("创建人Id");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("char(36)")
                        .HasColumnName("deleter_id")
                        .HasComment("Id of the deleter user.");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deletion_time")
                        .HasComment("Deletion time.");

                    b.Property<string>("DepartId")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("depart_id")
                        .HasComment("部门Id");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email")
                        .HasComment("邮箱");

                    b.Property<string>("EmployeeIDNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("employee_id_number")
                        .HasComment("工号");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("longtext")
                        .HasColumnName("extra_properties")
                        .HasComment("");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted")
                        .HasComment("Used to mark an Entity as 'Deleted'.");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_modification_time")
                        .HasComment("最后修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("char(36)")
                        .HasColumnName("last_modifier_id")
                        .HasComment("最后人Id");

                    b.Property<bool>("LockLogin")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("lock_login")
                        .HasComment("登录锁定");

                    b.Property<DateTime?>("LoginDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("login_date")
                        .HasComment("最后登录时间");

                    b.Property<string>("LoginIp")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("login_ip")
                        .HasComment("最后登录ip");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("login_name")
                        .HasComment("登录账号");

                    b.Property<string>("Memo")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("memo")
                        .HasComment("备注");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nickname")
                        .HasComment("昵称/姓名");

                    b.Property<string>("Password")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("password")
                        .HasComment("密码");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("phone")
                        .HasComment("电话");

                    b.Property<string>("PostId")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("post_id")
                        .HasComment("职务Id");

                    b.Property<DateTime?>("PwdUpdateDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("pwd_update_date")
                        .HasComment("最后密码更改时间");

                    b.Property<string>("Salt")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("salt")
                        .HasComment("密码盐");

                    b.Property<int>("Sex")
                        .HasColumnType("int")
                        .HasColumnName("sex")
                        .HasComment("性别(0-默认未知,1-男,2-女)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("状态(1-正常,2-锁定)");

                    b.Property<bool>("SupperUser")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("supper_user")
                        .HasComment("管理员用户");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)")
                        .HasColumnName("tenant_id")
                        .HasComment("租户Id");

                    b.Property<int>("UserType")
                        .HasColumnType("int")
                        .HasColumnName("user_type")
                        .HasComment("账号类型: ( 1: 平台   2:租户用户)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeIDNumber");

                    b.HasIndex("LoginName");

                    b.HasIndex("Phone");

                    b.ToTable("sys_user");
                });

            modelBuilder.Entity("XFree.Simple.Domain.SystemManagement.Permission.BackgroundApi", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("id")
                        .HasComment("数据唯一标识");

                    b.Property<string>("EnName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("en_name")
                        .HasComment("英文名称");

                    b.Property<string>("Method")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("method")
                        .HasComment("方法");

                    b.Property<string>("Module")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("module")
                        .HasComment("模块");

                    b.Property<int>("MultiTenancySides")
                        .HasColumnType("int")
                        .HasColumnName("multi_tenancy_sides")
                        .HasComment("");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("name")
                        .HasComment("名称");

                    b.Property<string>("ParentPermissionCode")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("parent_permission_code")
                        .HasComment("父节点权限编码");

                    b.Property<string>("Path")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("path")
                        .HasComment("接口路径");

                    b.Property<string>("PermissionCode")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("permission_code")
                        .HasComment("权限编码");

                    b.Property<bool>("PrimaryNode")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("primary_node")
                        .HasComment("一级节点");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int")
                        .HasColumnName("sort_order")
                        .HasComment("排序");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)")
                        .HasColumnName("tenant_id")
                        .HasComment("租户Id");

                    b.HasKey("Id");

                    b.HasIndex("ParentPermissionCode");

                    b.HasIndex("PermissionCode");

                    b.ToTable("sys_background_api");
                });

            modelBuilder.Entity("XFree.Simple.Domain.SystemManagement.Permission.DepartRole", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("id")
                        .HasComment("数据唯一标识");

                    b.Property<string>("DepartId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("depart_id")
                        .HasComment("");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("role_id")
                        .HasComment("");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)")
                        .HasColumnName("tenant_id")
                        .HasComment("租户Id");

                    b.HasKey("Id");

                    b.HasIndex("DepartId");

                    b.HasIndex("RoleId");

                    b.ToTable("sys_depart_role");
                });

            modelBuilder.Entity("XFree.Simple.Domain.SystemManagement.Permission.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("id")
                        .HasComment("数据唯一标识");

                    b.Property<string>("AccessValue")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("access_value")
                        .HasComment("访问权限编码");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code")
                        .HasComment("角色编码");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("concurrency_stamp")
                        .HasComment("");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("creation_time")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("creator_id")
                        .HasComment("创建人Id");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("char(36)")
                        .HasColumnName("deleter_id")
                        .HasComment("Id of the deleter user.");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deletion_time")
                        .HasComment("Deletion time.");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("longtext")
                        .HasColumnName("extra_properties")
                        .HasComment("");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted")
                        .HasComment("Used to mark an Entity as 'Deleted'.");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_modification_time")
                        .HasComment("最后修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("char(36)")
                        .HasColumnName("last_modifier_id")
                        .HasComment("最后人Id");

                    b.Property<string>("Memo")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("memo")
                        .HasComment("备注");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name")
                        .HasComment("角色名称");

                    b.Property<int>("RoleAccessType")
                        .HasColumnType("int")
                        .HasColumnName("role_access_type")
                        .HasComment("可访问权限类型");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("状态");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)")
                        .HasColumnName("tenant_id")
                        .HasComment("租户Id");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("Name");

                    b.ToTable("sys_role");
                });

            modelBuilder.Entity("XFree.Simple.Domain.SystemManagement.Permission.RoleUiPermission", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("id")
                        .HasComment("数据唯一标识");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("concurrency_stamp")
                        .HasComment("");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("longtext")
                        .HasColumnName("extra_properties")
                        .HasComment("");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("role_id")
                        .HasComment("角色Id");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)")
                        .HasColumnName("tenant_id")
                        .HasComment("租户Id");

                    b.Property<string>("UiPermissionId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("ui_permission_id")
                        .HasComment("权限Id");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UiPermissionId");

                    b.ToTable("sys_role_ui_permission");
                });

            modelBuilder.Entity("XFree.Simple.Domain.SystemManagement.Permission.UiPermission", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("id")
                        .HasComment("数据唯一标识");

                    b.Property<string>("Component")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("component")
                        .HasComment("组件");

                    b.Property<string>("ComponentName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("component_name")
                        .HasComment("组件名称");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("concurrency_stamp")
                        .HasComment("");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("creation_time")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("creator_id")
                        .HasComment("创建人Id");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("char(36)")
                        .HasColumnName("deleter_id")
                        .HasComment("Id of the deleter user.");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deletion_time")
                        .HasComment("Deletion time.");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("description")
                        .HasComment("描述");

                    b.Property<string>("EnName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("en_name")
                        .HasComment("菜单英文标题");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("enabled")
                        .HasComment("按钮权限状态(0无效1有效)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("longtext")
                        .HasColumnName("extra_properties")
                        .HasComment("");

                    b.Property<bool>("Hidden")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("hidden")
                        .HasComment("是否隐藏路由: 0否,1是");

                    b.Property<string>("Icon")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("icon")
                        .HasComment("菜单图标");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted")
                        .HasComment("Used to mark an Entity as 'Deleted'.");

                    b.Property<bool>("IsLeaf")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_leaf")
                        .HasComment("是否叶子节点:    1:是   0:不是");

                    b.Property<bool>("IsRoute")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_route")
                        .HasComment("是否路由菜单: 0:不是  1:是（默认值1）");

                    b.Property<bool>("KeepAlive")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("keep_alive")
                        .HasComment("是否缓存该页面:    1:是   0:不是");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_modification_time")
                        .HasComment("最后修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("char(36)")
                        .HasColumnName("last_modifier_id")
                        .HasComment("最后人Id");

                    b.Property<int>("MultiTenancySides")
                        .HasColumnType("int")
                        .HasColumnName("multi_tenancy_sides")
                        .HasComment("");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name")
                        .HasComment("菜单标题");

                    b.Property<bool>("OpenMode")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("open_mode")
                        .HasComment("菜单打开方式 0/内部打开 1/外部打开");

                    b.Property<string>("ParentId")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("parent_id")
                        .HasComment("父id");

                    b.Property<string>("Perms")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("perms")
                        .HasComment("菜单权限编码");

                    b.Property<string>("PermsType")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("perms_type")
                        .HasComment("权限策略1显示2禁用");

                    b.Property<string>("Redirect")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("redirect")
                        .HasComment("一级菜单跳转地址");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int")
                        .HasColumnName("sort_order")
                        .HasComment("菜单排序");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)")
                        .HasColumnName("tenant_id")
                        .HasComment("租户Id");

                    b.Property<int>("UiMenuType")
                        .HasColumnType("int")
                        .HasColumnName("ui_menu_type")
                        .HasComment("菜单类型(0:一级菜单; 1:子菜单:2:按钮权限)");

                    b.Property<string>("Url")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("url")
                        .HasComment("路径");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("ParentId");

                    b.ToTable("sys_ui_permission");
                });

            modelBuilder.Entity("XFree.Simple.Domain.SystemManagement.Permission.UiWithApi", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("id")
                        .HasComment("数据唯一标识");

                    b.Property<string>("PermissionCode")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("permission_code")
                        .HasComment("接口资源编码");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)")
                        .HasColumnName("tenant_id")
                        .HasComment("租户Id");

                    b.Property<string>("UiPermissionId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("ui_permission_id")
                        .HasComment("");

                    b.HasKey("Id");

                    b.HasIndex("PermissionCode");

                    b.HasIndex("UiPermissionId");

                    b.ToTable("sys_ui_with_api");
                });

            modelBuilder.Entity("XFree.Simple.Domain.SystemManagement.Permission.UserRole", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("id")
                        .HasComment("数据唯一标识");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("role_id")
                        .HasComment("角色Id");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)")
                        .HasColumnName("tenant_id")
                        .HasComment("租户Id");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("user_id")
                        .HasComment("员工Id");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("sys_user_role");
                });
#pragma warning restore 612, 618
        }
    }
}
